import streamlit as st
import pandas as pd
import numpy as np
import os
import sys
import io
from datetime import datetime
import base64

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
try:
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
except NameError:
    BASE_DIR = os.getcwd()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="ProductTableManager",
    page_icon="üìä",
    layout="wide"
)

# –ë–ª–æ–∫ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ try-except
try:
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    try:
        for folder in ["data", "static", "backups"]:
            folder_path = os.path.join(BASE_DIR, folder)
            os.makedirs(folder_path, exist_ok=True)
    except Exception as e:
        st.warning(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {str(e)}")
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫

    # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
    try:
        sys.path.append(BASE_DIR)
        from marketplace_detection import detect_marketplace
        from utils import convert_table_format
        st.sidebar.success("–ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        st.sidebar.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {str(e)}")
        # –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    st.title("ProductTableManager")
    st.subheader("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤")
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
    def load_logo(marketplace):
        logo_paths = {
            "ozon": "attached_assets/ozon.png",
            "wildberries": "attached_assets/wildberries.png",
            "lemanpro": "attached_assets/lemanpro.png",
            "yandex_market": "attached_assets/yandex-market.png",
            "vse_instrumenty": "attached_assets/vse-instrumenty.png",
            "sber_mega_market": "attached_assets/sbermegamarket.png"
        }
        
        try:
            if marketplace in logo_paths:
                logo_path = os.path.join(BASE_DIR, logo_paths[marketplace])
                if os.path.exists(logo_path):
                    return st.image(logo_path, width=100)
                else:
                    st.info(f"–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {logo_path}")
        except Exception as e:
            st.info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø {marketplace}")
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
    def create_download_link(df, filename):
        try:
            output = io.BytesIO()
            with pd.ExcelWriter(output, engine='openpyxl') as writer:
                df.to_excel(writer, index=False)
            excel_data = output.getvalue()
            b64 = base64.b64encode(excel_data).decode()
            href = f'<a href="data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{b64}" download="{filename}">–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª</a>'
            return href
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {str(e)}")
            return None
    
    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º radio –≤–º–µ—Å—Ç–æ st.tabs
    marketplace_options = ["Ozon", "Wildberries", "–õ–µ–º–∞–Ω–ü—Ä–æ", "–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç", "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç"]
    selected_marketplace = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:", marketplace_options)
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
    st.subheader(f"–†–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ {selected_marketplace}")
    
    # –õ–æ–≥–æ—Ç–∏–ø –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
    marketplace_key_map = {
        "Ozon": "ozon",
        "Wildberries": "wildberries",
        "–õ–µ–º–∞–Ω–ü—Ä–æ": "lemanpro",
        "–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç": "yandex_market",
        "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã": "vse_instrumenty",
        "–°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç": "sber_mega_market"
    }
    
    selected_key = marketplace_key_map.get(selected_marketplace)
    if selected_key:
        load_logo(selected_key)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª —Å —Ç–æ–≤–∞—Ä–∞–º–∏", type=["xlsx", "xls"])
    
    if uploaded_file is not None:
        try:
            # –ß—Ç–µ–Ω–∏–µ Excel-—Ñ–∞–π–ª–∞
            df = pd.read_excel(uploaded_file)
            
            # –ï—Å–ª–∏ DataFrame –ø—É—Å—Ç–æ–π –∏–ª–∏ –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã
            if df.empty:
                st.warning("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö.")
                st.stop()
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
            st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
            st.dataframe(df.head())
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
            try:
                detected_marketplace = detect_marketplace(df)
                if detected_marketplace:
                    st.success(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: {detected_marketplace}")
                else:
                    st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
                    detected_marketplace = "Unknown"
            except Exception as e:
                st.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: {str(e)}")
                detected_marketplace = "Unknown"
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            st.subheader("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã")
            target_formats = [m for m in marketplace_options if m != detected_marketplace]
            
            target_marketplace = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", 
                target_formats
            )
            
            if st.button("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"):
                with st.spinner("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è..."):
                    try:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑ utils.py
                        converted_df = convert_table_format(df, detected_marketplace, target_marketplace)
                        
                        # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                        st.dataframe(converted_df.head())
                        
                        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                        converted_filename = f"converted_{detected_marketplace}_to_{target_marketplace}_{timestamp}.xlsx"
                        download_link = create_download_link(converted_df, converted_filename)
                        
                        if download_link:
                            st.markdown(download_link, unsafe_allow_html=True)
                            st.success(f"–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {str(e)}")
        
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    with st.expander("–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"):
        st.write("""
        ### ProductTableManager
        
        –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.
        
        –§—É–Ω–∫—Ü–∏–∏:
        - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
        - –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
        - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö
        - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —ç–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã:
        - Ozon
        - Wildberries
        - –õ–µ–º–∞–Ω–ü—Ä–æ
        - –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç
        - –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        - –°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç
        
        –í–µ—Ä—Å–∏—è: 1.0
        """)

    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∞–π–¥–±–∞—Ä–µ
    with st.sidebar:
        with st.expander("–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
            st.write(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
            st.write(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {BASE_DIR}")
            
            try:
                st.write(f"–§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {[f for f in os.listdir(BASE_DIR) if os.path.isfile(os.path.join(BASE_DIR, f))]}")
            except Exception as e:
                st.write(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤: {str(e)}")

except Exception as e:
    st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")
    st.error(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
    st.error(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {str(e)}")
    
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.write(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    st.write(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    try:
        st.write(f"–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {os.listdir()}")
    except:
        st.write("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤")
    
    st.exception(e)
