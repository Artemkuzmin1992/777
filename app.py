import streamlit as st
import pandas as pd
import numpy as np
import os
import sys
import io
from datetime import datetime
import base64

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ BASE_DIR
try:
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
except NameError:
    BASE_DIR = os.getcwd()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="ProductTableManager",
    page_icon="üìä",
    layout="wide"
)

# CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
st.markdown("""
<style>
    .main {
        padding-top: 1rem;
    }
    .block-container {
        padding-top: 1rem;
    }
    h1 {
        font-size: 2.5rem;
    }
    .stTabs [data-baseweb="tab-list"] {
        gap: 10px;
    }
    .stTabs [data-baseweb="tab"] {
        height: 50px;
        white-space: pre-wrap;
        background-color: #f0f2f6;
        border-radius: 5px;
        padding-left: 10px;
        padding-right: 10px;
        font-size: 14px;
    }
    .stTabs [aria-selected="true"] {
        background-color: #4e88e5 !important;
        color: white !important;
    }
    .upload-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        margin-top: 20px;
        border: 2px dashed #4e88e5;
        border-radius: 10px;
        background-color: #f8f9fa;
    }
    .success-box {
        background-color: #d1e7dd;
        color: #0a3622;
        padding: 10px;
        border-radius: 5px;
        margin-top: 10px;
    }
    .warning-box {
        background-color: #fff3cd;
        color: #856404;
        padding: 10px;
        border-radius: 5px;
        margin-top: 10px;
    }
    .button-primary {
        background-color: #4e88e5;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-weight: bold;
    }
    .logo-container {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }
</style>
""", unsafe_allow_html=True)

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
try:
    sys.path.append(BASE_DIR)
    from marketplace_detection import detect_marketplace
    from utils import convert_table_format
except Exception as e:
    st.sidebar.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {str(e)}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
MARKETPLACE_NAMES = ["Ozon", "Wildberries", "–õ–µ–º–∞–Ω–ü—Ä–æ", "–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç", "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç"]
MARKETPLACE_KEYS = ["ozon", "wildberries", "lemanpro", "yandex_market", "vse_instrumenty", "sber_mega_market"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
def load_logo(marketplace):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–æ–≥–æ—Ç–∏–ø –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞"""
    logo_files = {
        "Ozon": "ozon.png",
        "Wildberries": "wildberries.png",
        "–õ–µ–º–∞–Ω–ü—Ä–æ": "lemanpro.png",
        "–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç": "yandex-market.png",
        "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã": "vse-instrumenty.png",
        "–°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç": "sbermegamarket.png"
    }
    
    try:
        if marketplace in logo_files:
            logo_path = os.path.join(BASE_DIR, "attached_assets", logo_files[marketplace])
            if os.path.exists(logo_path):
                st.markdown('<div class="logo-container">', unsafe_allow_html=True)
                st.image(logo_path, width=150)
                st.markdown('</div>', unsafe_allow_html=True)
            else:
                pass
    except Exception as e:
        pass

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
def create_download_link(df, filename):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è DataFrame –∫–∞–∫ Excel-—Ñ–∞–π–ª–∞"""
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        df.to_excel(writer, index=False)
    excel_data = output.getvalue()
    b64 = base64.b64encode(excel_data).decode()
    download_str = f"""
    <div style="text-align: center; margin-top: 20px;">
        <a href="data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{b64}" 
           download="{filename}" 
           style="background-color: #4CAF50; color: white; padding: 12px 20px; 
                  text-decoration: none; border-radius: 5px; font-weight: bold;">
            –°–∫–∞—á–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        </a>
    </div>
    """
    return download_str

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("ProductTableManager")
st.write("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤")
st.markdown("---")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±—ã
    tabs = st.tabs(MARKETPLACE_NAMES)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ç–∞–±–∞
    for i, tab in enumerate(tabs):
        with tab:
            marketplace = MARKETPLACE_NAMES[i]
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
            load_logo(marketplace)
            
            # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
            st.markdown('<div class="upload-container">', unsafe_allow_html=True)
            st.subheader(f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É {marketplace}")
            uploaded_file = st.file_uploader("", type=["xlsx", "xls"], key=f"upload_{marketplace}")
            st.markdown('</div>', unsafe_allow_html=True)
            
            if uploaded_file is not None:
                try:
                    # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                    df = pd.read_excel(uploaded_file)
                    
                    # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
                    if df.empty:
                        st.warning("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö")
                        st.stop()
                    
                    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                    st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
                    st.dataframe(df.head())
                    
                    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
                    try:
                        detected_marketplace = detect_marketplace(df)
                        if detected_marketplace:
                            st.markdown(f'<div class="success-box">–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: {detected_marketplace}</div>', unsafe_allow_html=True)
                        else:
                            st.markdown(f'<div class="warning-box">–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {marketplace}</div>', unsafe_allow_html=True)
                            detected_marketplace = marketplace
                    except Exception as e:
                        st.markdown(f'<div class="warning-box">–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: {str(e)}</div>', unsafe_allow_html=True)
                        detected_marketplace = marketplace
                    
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
                    st.markdown("---")
                    st.subheader("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã")
                    
                    # –í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
                    col1, col2 = st.columns([3, 1])
                    with col1:
                        target_formats = [m for m in MARKETPLACE_NAMES if m != detected_marketplace]
                        target_marketplace = st.selectbox(
                            "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", 
                            target_formats,
                            key=f"target_{marketplace}"
                        )
                    
                    # –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                    with col2:
                        convert_clicked = st.button("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"convert_{marketplace}", 
                                                   help="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                    
                    if convert_clicked:
                        with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è..."):
                            try:
                                # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
                                converted_df = convert_table_format(df, detected_marketplace, target_marketplace)
                                
                                # –£—Å–ø–µ—à–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
                                st.markdown('<div class="success-box" style="text-align: center; padding: 15px;">'
                                          '<h3 style="margin: 0;">–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞!</h3>'
                                          '</div>', unsafe_allow_html=True)
                                
                                # –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                                st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                                st.dataframe(converted_df.head())
                                
                                # –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                                converted_filename = f"converted_{detected_marketplace}_to_{target_marketplace}_{timestamp}.xlsx"
                                download_link = create_download_link(converted_df, converted_filename)
                                
                                if download_link:
                                    st.markdown(download_link, unsafe_allow_html=True)
                                    
                                    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                                    try:
                                        os.makedirs(os.path.join(BASE_DIR, "data"), exist_ok=True)
                                        converted_path = os.path.join(BASE_DIR, "data", converted_filename)
                                        converted_df.to_excel(converted_path, index=False)
                                    except:
                                        pass
                            except Exception as e:
                                st.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {str(e)}")
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    st.markdown("---")
    with st.expander("–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"):
        st.write("""
        ### ProductTableManager
        
        –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.
        
        **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å**:
        - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
        - –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
        - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö
        - –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        
        **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã**:
        - Ozon
        - Wildberries
        - –õ–µ–º–∞–Ω–ü—Ä–æ
        - –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç
        - –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        - –°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç
        
        **–í–µ—Ä—Å–∏—è**: 1.0
        """)

except Exception as e:
    # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å —Ç–∞–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.")
    st.error(f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}")
    
    # –í—ã–±–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ —á–µ—Ä–µ–∑ —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏
    marketplace = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:", MARKETPLACE_NAMES)
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
    load_logo(marketplace)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    st.subheader(f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É {marketplace}")
    uploaded_file = st.file_uploader("", type=["xlsx", "xls"])
    
    if uploaded_file is not None:
        # –ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ...
        try:
            # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            df = pd.read_excel(uploaded_file)
            
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
            st.dataframe(df.head())
            
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
            detected_marketplace = detect_marketplace(df)
            if detected_marketplace:
                st.success(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞: {detected_marketplace}")
            else:
                st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞")
                detected_marketplace = marketplace
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
            st.subheader("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã")
            
            # –í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
            target_formats = [m for m in MARKETPLACE_NAMES if m != detected_marketplace]
            target_marketplace = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", target_formats)
            
            # –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
            if st.button("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"):
                with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è..."):
                    try:
                        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
                        converted_df = convert_table_format(df, detected_marketplace, target_marketplace)
                        
                        # –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                        st.dataframe(converted_df.head())
                        
                        # –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                        converted_filename = f"converted_{detected_marketplace}_to_{target_marketplace}_{timestamp}.xlsx"
                        download_link = create_download_link(converted_df, converted_filename)
                        
                        if download_link:
                            st.markdown(download_link, unsafe_allow_html=True)
                            st.success(f"–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {str(e)}")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
